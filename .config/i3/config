# i3 config
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# no window borders
new_window pixel
hide_edge_borders smart

# colors
# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #285577 #ffffff #ff6000  #ffa500

# convenient aliases
set $exec exec --no-startup-id
set $exec_always exec_always --no-startup-id
set $scripts_dir /home/tlegutko/.config/scripts

# basics
bindsym $mod+Return exec termite -d `xcwd`
bindsym $mod+e $exec emacsclient -c -n
bindsym $mod+c $exec google-chrome-stable
bindsym $mod+o $exec okular
bindsym $mod+q kill
bindsym $mod+d $exec i3-dmenu-desktop --dmenu="dmenu -b -i"
bindsym $mod+Shift+s $exec systemctl suspend

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+KP_Left focus left
bindsym $mod+KP_Down focus down
bindsym $mod+KP_Up focus up
bindsym $mod+KP_Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+KP_Left move left
bindsym $mod+Shift+KP_Down move down
bindsym $mod+Shift+KP_Up move up
bindsym $mod+Shift+KP_Right move right

# split in horizontal orientation
bindsym $mod+v split h

# split in vertical orientation
bindsym $mod+b split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+z focus child

# monitor names
# primary
set $lower_right "DP-4"
# HDMI
set $lower_left "DP-1"
# miniDP
set $upper_right "DP-0"
# USB-C
set $upper_left "DP-6"

# nvidia same as xrandr, but ForceFullCompositionPipeline fixes screen tearing
$exec xrandr --output $lower_right --primary
$exec_always nvidia-settings --assign CurrentMetaMode="DP-4: 1920x1080 +1920+1080 { ForceFullCompositionPipeline = On }, DP-1: 1920x1080 +0+1080 { ForceFullCompositionPipeline = On }, DP-0: 1920x1080 +1920+0 { ForceFullCompositionPipeline = On }, DP-6: 1680x1050 +240+30 { ForceFullCompositionPipeline = On }"

#compton compositor to eliminate stutters when scrolling
$exec compton -cCzGb -t-3 -l-5 -r4 \
 --config /dev/null --backend xrender \
 --unredir-if-possible

# nice black wallpaper, needed because compton makes the default grey
$exec hsetroot -solid "#000000"

# presentation mode - mirror primary display to all outputs
bindsym $mod+p $exec xrandr \
--output $lower_right --auto --primary \
--output $lower_left --auto --same-as $lower_right \
--output $upper_right --auto --same-as $lower_right \
--output $upper_left --auto --same-as $lower_right

# workspace to monitor assignment for 4 monitors in grid
# ensure workspaces are on appropriate output when plugging in additional displays
for_window [workspace=1] move workspace to output $upper_left
for_window [workspace=2] move workspace to output $upper_right
for_window [workspace=3] move workspace to output $lower_left
for_window [workspace=4] move workspace to output $lower_right
for_window [workspace=5] move workspace to output $upper_left
for_window [workspace=6] move workspace to output $upper_right
for_window [workspace=7] move workspace to output $lower_left
for_window [workspace=8] move workspace to output $lower_right
for_window [workspace=9] move workspace to output $lower_right 
for_window [workspace=10] move workspace to output $lower_right

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

bindsym KP_Home workspace number 1
bindsym KP_Prior workspace number 2
bindsym KP_End workspace number 3
bindsym KP_Next workspace number 4
bindsym $mod+KP_Home workspace number 5
bindsym $mod+KP_Prior workspace number 6
bindsym $mod+KP_End workspace number 7
bindsym $mod+KP_Next workspace number 8
bindsym KP_Begin workspace number 9
bindsym $mod+KP_Begin workspace number 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

bindsym Shift+KP_Home move container to workspace number 1
bindsym Shift+KP_Prior move container to workspace number 2
bindsym Shift+KP_End move container to workspace number 3
bindsym Shift+KP_Next move container to workspace number 4
bindsym $mod+Shift+KP_Home move container to workspace number 5
bindsym $mod+Shift+KP_Prior move container to workspace number 6
bindsym $mod+Shift+KP_End move container to workspace number 7
bindsym $mod+Shift+KP_Next move container to workspace number 8
bindsym Shift+KP_Begin move container to workspace number 9
bindsym $mod+Shift+KP_Begin move container to workspace number 10

# move focused workspace to monitor
bindsym Mod1+Shift+KP_Next move workspace to output $lower_right
bindsym Mod1+Shift+KP_End move workspace to output $lower_left
bindsym Mod1+Shift+KP_Home move workspace to output $upper_left
bindsym Mod1+Shift+KP_Prior move workspace to output $upper_right
bindsym Mod1+Shift+KP_Left move workspace to output left
bindsym Mod1+Shift+KP_Down move workspace to output down
bindsym Mod1+Shift+KP_Up move workspace to output up
bindsym Mod1+Shift+KP_Right move workspace to output right

# rename workspace with dmenu
bindsym $mod+w $exec $scripts_dir/rename-workspace.sh
# reload the configuration file
bindsym $mod+Shift+c $exec ~/.sync.sh && i3-msg reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r $exec ~/.sync.sh && i3-msg restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# more convenient visual mode in termite shortcut
bindsym --release Mod1+Escape exec --no-startup-id xdotool key --clearmodifiers ctrl+shift+space

# resize wirdow (you can also use the mouse for that)
mode "resize" {
  bindsym h resize shrink width 10 px or 10 ppt
  bindsym j resize shrink height 10 px or 10 ppt
  bindsym k resize grow height 10 px or 10 ppt
  bindsym l resize grow width 10 px or 10 ppt
  # exit resize mode
  bindsym Escape mode "default"
  bindsym $mod+Escape mode "default"
  bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        position top
	font pango:DejaVu Sans Mono, FontAwesome 8
	tray_output primary
	status_command i3blocks
  colors {
    binding_mode #ffa500 #285577 #ffffff 
  }
}
set $bar_refresh pkill -RTMIN+10 i3blocks
set $delayed_bar_refresh sleep 0.05 && pkill -RTMIN+10 i3blocks

# brightness
bindsym KP_Subtract $exec "xbacklight -10 && $bar_refresh"
bindsym KP_Add $exec "xbacklight +10 && $bar_refresh"
$exec xbacklight -set 30

# volume & playback cotrol
bindsym XF86AudioRaiseVolume $exec \
  "pactl set-sink-mute @DEFAULT_SINK@ false \
  && (($($scripts_dir/sound_status.sh) <= 90)) \
  && pactl set-sink-volume @DEFAULT_SINK@ +10% \
  && $bar_refresh"
bindsym XF86AudioLowerVolume $exec "pactl set-sink-volume @DEFAULT_SINK@ -10% && $bar_refresh"
bindsym XF86AudioMute $exec "pactl set-sink-mute @DEFAULT_SINK@ toggle && $bar_refresh"
bindsym XF86AudioMicMute $exec "pactl set-source-mute @DEFAULT_SOURCE@ toggle"
bindsym KP_Insert $exec "playerctl previous && $delayed_bar_refresh"
bindsym KP_Delete $exec "playerctl next && $delayed_bar_refresh"
bindsym KP_Enter $exec "playerctl play-pause && $delayed_bar_refresh"

# bluetooth
bindsym KP_Divide $exec "$scripts_dir/bluetooth_off.sh && $delayed_bar_refresh"
bindsym KP_Multiply $exec "$scripts_dir/bluetooth_on.sh && $delayed_bar_refresh"
# screenshot of selection
bindsym --release Print $exec scrot -s -e 'xclip -selection clipboard -t image/png $f && mv $f ~/Pictures/'

# daemons
$exec nm-applet
$exec /usr/lib/kdeconnectd
$exec indicator-kdeconnect
$exec redshift -l 50.094732:19.973673 -t 5500:3100
$exec $scripts_dir/focus-last.py
$exec dunst -config ~/.config/dunst/dunstrc

# focus last window or restart daemon if crashed
bindsym $mod+Tab $exec "$scripts_dir/focus-last.py --switch || $scripts_dir/focus-last.py"

# double prssing workspace num goes back to previous one
workspace_auto_back_and_forth no

# touchpad
$exec_always xinput set-prop "SynPS/2 Synaptics TouchPad" "libinput Accel Speed" 1
$exec_always xinput set-prop "SynPS/2 Synaptics TouchPad" "libinput Natural Scrolling Enabled" 1
$exec_always xinput set-prop "SynPS/2 Synaptics TouchPad" "libinput Tapping Enabled" 1
$exec xinput set-prop "SynPS/2 Synaptics TouchPad" "Device Enabled" 0
bindsym $mod+t $exec $scripts_dir/toggle_touchpad.sh

# trackpoint
$exec_always xinput set-prop "TPPS/2 IBM TrackPoint" "libinput Accel Speed" 1
bindsym $mod+m $exec $scripts_dir/toggle_trackpoint.sh

# keyboard - pl layout and caps lock as esc
$exec setxkbmap -layout pl -option caps:escape -option numpad:microsoft

# cursor size & hiding
$exec xrdb ~/.Xresources
$exec unclutter --timeout 1
mouse_warping output

# app to workspace assignment
for_window [class="Spotify"] move to workspace "10:spotify"

# startup apps
$exec spotify

# dropdown terminals
$exec termite -t "1-dropdown"
$exec emacsclient -c -n -F "((title . \"2-dropdown\"))"
for_window [title="1-dropdown"] floating enable 
for_window [title="1-dropdown"] move scratchpad
for_window [title="2-dropdown"] floating enable 
for_window [title="2-dropdown"] move scratchpad
bindsym $mod+grave $exec $scripts_dir/toggle_dropdown_terminal.sh 1
bindsym $mod+Shift+grave $exec termite -t "1-dropdown"
bindsym Mod1+grave $exec $scripts_dir/toggle_dropdown_terminal.sh 2
bindsym Mod1+Shift+grave $exec emacsclient -c -n -F '((title . \"2-dropdown\"))'

# masters thesis add citation from clipboard and recompile latex
bindsym $mod+bracketleft $exec $scripts_dir/add-citation-to-masters-thesis.sh

# screen locking and suspending
$exec xautolock -detectsleep \
-notify 30 \
-notifier "notify-send 'Sleeping time' 'Turning screen off in 30s.' -t 30000" \
-time 10 -locker "xset dpms force off" \
-killtime 15 -killer "systemctl suspend" \
-corners "----" -cornersize 150

# ace-jump between windows
popup_during_fullscreen leave_fullscreen
for_window [class="Yad"] floating enable
set $i3-jump-cmd mode "default"; exec --no-startup-id xdotool key --delay 0 --clearmodifiers
mode "i3-jump-window" {
     bindsym --release a $i3-jump-cmd "a" Control_L+Return
     bindsym --release 2 $i3-jump-cmd "2" Control_L+Return
     bindsym --release s $i3-jump-cmd "s" Control_L+Return
     bindsym --release d $i3-jump-cmd "d" Control_L+Return
     bindsym --release f $i3-jump-cmd "f" Control_L+Return
     bindsym --release g $i3-jump-cmd "g" Control_L+Return
     bindsym --release q $i3-jump-cmd "q" Control_L+Return
     bindsym --release w $i3-jump-cmd "w" Control_L+Return
     bindsym --release e $i3-jump-cmd "e" Control_L+Return
     bindsym --release r $i3-jump-cmd "r" Control_L+Return
     bindsym --release t $i3-jump-cmd "t" Control_L+Return
     bindsym --release z $i3-jump-cmd "z" Control_L+Return
     bindsym --release x $i3-jump-cmd "x" Control_L+Return
     bindsym --release c $i3-jump-cmd "c" Control_L+Return
     bindsym --release v $i3-jump-cmd "v" Control_L+Return
     bindsym --release j $i3-jump-cmd "j" Control_L+Return
     bindsym --release k $i3-jump-cmd "k" Control_L+Return
     bindsym --release l $i3-jump-cmd "l" Control_L+Return
     bindsym --release m $i3-jump-cmd "m" Control_L+Return
     bindsym --release i $i3-jump-cmd "i" Control_L+Return
     bindsym --release o $i3-jump-cmd "o" Control_L+Return
     bindsym --release p $i3-jump-cmd "p" Control_L+Return
     bindsym --release Escape $i3-jump-cmd Escape
     bindsym $mod+apostrophe mode "default"
}
bindsym $mod+apostrophe mode "i3-jump-window"; $exec $scripts_dir/i3-ace-jump.sh